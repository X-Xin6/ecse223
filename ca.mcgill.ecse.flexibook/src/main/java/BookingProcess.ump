namespace ca.mcgill.ecse.flexibook.model;

class Bookingprocess {

depend ca.mcgill.ecse.flexibook.application;
depend ca.mcgill.ecse.flexibook.Controller;
depend ca.mcgill.ecse.flexibook.model;
depend ca.mcgill.ecse.flexibook.util;
depend java.util.*;


	appointmentStatus {
    
		booking {
     		makeappointment {
    			makeappoitment->booking.makeappointment;
     			makeappoitment->appointmentstart.checkarrival;
     			checkcancel->booking.cancelappointment;
     			checkcancel->booking.makeappointment;
     			checkchange->booking.changeappointment;
     			checkchange->booking.makeappointment;
     		}
     
      
     		changeappointment {
     			changeservce->appointmentstart.checkarrival;
    			changeservce->changeappointment;
     			changedatetime->appointmentstart.checkarrival;
     			changedatetime->changeappointment;
     			changecombo->appointmentstart.checkarrival;
     			changecombo->changeappointment;
     		}
     
     
     		cancelappointment {
     			cancel->appointmentvanish;
     		}
         
		}
     
		appointmentStart {
     		// checkArrival {
     			// ownerCheck -> checkArrival;
     			// ownerCheck -> appointmentVanish; 
     			// cutomerCheck -> changeAppointmentDuring;
     			// cutomerCheck -> appointmentEnded;
     			
     			Arrived {
     				toggleArrivalStatus() -> NotArrived;
     				schedule(Service service, Date date, Time time) / {
     					doSchedule(service, date, time);
     				} -> Arrived;
     				
     			}
     			
     			NotArrived {
     				toggleArrivalStatus() -> Arrived;
     				schedule(Service service, Date date, Time time) / {
     					rejectSchedule(service, date, time);
     				} -> NotArrived;
     			
     			}
     		}
     		
     		private void doSchedule(Service service, Date date, Time time) {
     			//I don't know what to write here.
     		}
     		
     		private void rejectSchedule(Service service, Date date, Time time) {
     			throw new RuntimeException("The customer did not arrive.");
     		}
     
     
     		changeappointmentduring {
     			changecombo->appointmentended;
     			changecomboop->changeappointmentduring;
    		}
     
     
     		appointmentended {
     			end->appointmentvanish;
     		}
     	}   
 
     
     	appointmentvanish {

     	}
     
	}
}